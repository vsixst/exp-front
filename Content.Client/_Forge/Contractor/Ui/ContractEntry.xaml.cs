using Content.Client.Message;
using Content.Shared._Forge.Contractor;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client._Forge.Contractor.Ui;

[GenerateTypedNameReferences]
public sealed partial class ContractEntry : BoxContainer
{
    [Dependency] private readonly IEntityManager _entMan = default!;

    public Action? OnAcceptButtonPressed;

    public ContractEntry(ContractData contract)
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        var target = _entMan.GetEntity(contract.TargetEntity);

        TargetPortrait.SetEntity(target);
        TargetNameLabel.SetMarkup(Loc.GetString("contracts-target-name", ("name", contract.TargetName)));
        TargetJobLabel.SetMarkup(Loc.GetString("contracts-target-job", ("job", contract.TargetJob)));
        DescriptionLabel.SetMarkup(Loc.GetString("contracts-description", ("reason", contract.Description)));
        RewardLabel.SetMarkup(Loc.GetString("contracts-reward", ("reward", contract.Reward), ("tcreward", contract.TelecrystalReward)));
        EvacPointLabel.Text = Loc.GetString(contract.EvacPointName);
        DifficultyLabel.Text = Loc.GetString("contracts-difficulty-value",
            ("value", (int)(contract.Difficulty * 100)));
        DeadlineLabel.Text = Loc.GetString("contracts-deadline-value",
            ("minutes", contract.Deadline.TotalMinutes.ToString("F0")));

        AcceptButton.OnPressed += _ => OnAcceptButtonPressed?.Invoke();
    }
}
